                                    ------
                                    Home
                                    ------
                                    Terradue srl
                                    ------
                                     2012


~~
~~   Copyright 2012 Terradue srl
~~
~~   Licensed under the Apache License, Version 2.0 (the "License");
~~   you may not use this file except in compliance with the License.
~~   You may obtain a copy of the License at
~~
~~       http://www.apache.org/licenses/LICENSE-2.0
~~
~~   Unless required by applicable law or agreed to in writing, software
~~   distributed under the License is distributed on an "AS IS" BASIS,
~~   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~~   See the License for the specific language governing permissions and
~~   limitations under the License.
~~

How to install ${project.name}

* System Requirements

  * JDK: 1.6 or above. (see http://www.oracle.com/technetwork/java/)

  * Memory: No minimum requirement.

  * Disk: No minimum requirement.

  * Operating System: No minimum requirement. On Windows, Windows NT and above or Cygwin is required for
    the startup scripts. Tested on Windows XP, Fedora Core and Mac OS X.

* Installing ${project.name}

** Windows 2000/XP

  [[1]] Unzip the distribution archive, i.e. <<<${project.build.finalName}.zip>>> to the directory you wish to
        install <${project.name} ${project.version}>.
        These instructions assume you chose <<<C:\Program Files\Terradue>>>.
        The subdirectory <<<${project.build.finalName}>>> will be created from the archive.

  [[2]] Add the <<<DSI_TOOLS_HOME>>> environment variable by opening up the system properties (WinKey + Pause),
        selecting the <Advanced> tab, and the <Environment Variables> button, then adding the <<<DSI_TOOLS_HOME>>>
        variable in the user variables with the value
        <<<C:\Program Files\Terradue\\${project.build.finalName}>>>.

  [[3]] In the same dialog, add the <<<DSI_TOOLS>>> environment variable in the user variables with the value <<<%DSI_TOOLS_HOME%\bin>>>.

  [[4]] Optional: In the same dialog, add the <<<EXTRA_JVM_ARGUMENTS>>> environment variable in the user variables to specify
        JVM properties, e.g. the value <<<-Xms1024m -Xmx1024m>>>. This environment variable can be used to supply extra options.
        By default, it is set to: <<<-Xms500m -Xmx500m -XX:PermSize=128m -XX:-UseGCOverheadLimit>>>

  [[5]] In the same dialog, update/create the Path environment variable in the user variables and prepend the value
        <<<%DSI_TOOLS%>>> to add <<<${project.name}>>> available in the command line.

  [[6]] In the same dialog, make sure that <<<JAVA_HOME>>> exists in your user variables or in the system variables and it is
        set to the location of your JDK, e.g. <<<C:\Program Files\Java\jdk1.6.0_33>>> and that <<<%JAVA_HOME%\bin>>> is in your Path
        environment variable.

  [[7]] Open a new command prompt (Winkey + R then type cmd) and run one of any ${project.name} command, i.e.
        <<<dsi-describe-images --version>>> to verify that it is correctly installed.

** Unix-based Operating Systems (Linux, Solaris and Mac OS X)

  [[1]] Extract the distribution archive, i.e. <<<${project.build.finalName}-bin.tar.gz>>> to the directory you wish to
        install <${project.name} ${project.version}>.
        These instructions assume you chose <<</usr/local/terradue>>>.
        The subdirectory <<<${project.build.finalName}>>> will be created from the archive.

  [[2]] In a command terminal, add the <<<DSI_TOOLS_HOME>>> environment variable, e.g.
        <<<export DSI_TOOLS_HOME=/usr/local/terradue/${project.build.finalName}>>>.

  [[3]] Add the <<<DSI_TOOLS>>> environment variable, e.g. <<<export DSI_TOOLS=$DSI_TOOLS_HOME/bin>>>.

  [[4]] Optional: Add the <<<EXTRA_JVM_ARGUMENTS>>> environment variable to specify JVM properties, e.g.
        <<<export EXTRA_JVM_ARGUMENTS="-Xms1024m -Xmx1024m">>>.
        This environment variable can be used to supply extra options.

  [[5]] Add <<<DSI_TOOLS>>> environment variable to your path, e.g. <<<export PATH=$DSI_TOOLS:$PATH>>>.

  [[6]] Make sure that <<<JAVA_HOME>>> is set to the location of your JDK, e.g.
        <<<export JAVA_HOME=/usr/java/jdk1.6.0_33>>> and that <<<$JAVA_HOME/bin>>> is in your PATH environment variable.

  [[7]] Run one of any ${project.name} command, i.e. <<<dsi-describe-images --version>>> to verify that it is correctly installed.

* Managing DSI certificates

  Zimory usually provides certificates in <<<username.pfx>>> format, while ${project.name} supports OpenSSL formats only,
  so in order to use ${project.name} certificates need to be converted.

  We suggest you using the <<<openssl>>> command line tool to perform that conversion:

------------------
openssl pkcs12 -in username.pfx -clcerts -nokeys -out username.pem
------------------

  <NOTE> in order to avoid confusion, we strongly suggest to keep the original <<<pfx>>> password

  Once obtained the <<<pem>>> certificate, just put it under <<</usr/local/terradue/${project.build.finalName}/certs>>>
